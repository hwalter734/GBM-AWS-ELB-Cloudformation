- name: Delete all environment on AWS
  hosts: localhost
  gather_facts: false
  tasks:
  - name: Get ec2 machines info with type "ec2-instance"
    ec2_instance_info:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      filters:
        "tag:type": ec2instance
        instance-state-name: ['running','stopped']
    register: __ec2_info

  - name: Get vpc {{ vpc.name }} info
    ec2_vpc_net_info:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      filters:
        "tag:Name": "{{ vpc_name }}"
    register: __vpc_info

  - name: Get route table info of {{ __vpc_info.vpcs[0].vpc_id }}
    ec2_vpc_route_table_info:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      filters:
        vpc-id: "{{ __vpc_info.vpcs[0].vpc_id }}"
    register: __route_table_info

  - name: Delete ec2 machines with type "ec2-instance"
    ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      instance_id: "{{ item.instance_id }}"
      state: absent      
    with_items: "{{ __ec2_info.instances }}"
    when: __ec2_info.instances | length > 0

  - name: Delete load balancer {{ elb_name }}
    elb_application_lb:
      name: "{{ elb_name }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      state: absent
      wait: yes

  - name: Wait for load balancer delete
    pause:
      minutes: 1

  - name: Delete target group {{ target_group_name }}
    elb_target_group:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      name: "{{ target_group_name }}"
      protocol: "{{ target_group_protocol }}"
      port: "{{ target_group_port }}"
      vpc_id: "{{ __vpc_info.vpcs[0].vpc_id }}"
      state: absent

  - name: Delete security group {{ security_group_name }}
    ec2_group:
      name: "{{ security_group_name }}"
      region: "{{ region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      state: absent

  - name: Delete route table "{{ __route_table_info.route_tables[0].id }}"
    ec2_vpc_route_table:
      route_table_id: "{{ __route_table_info.route_tables[0].id }}"
      vpc_id: "{{ __vpc_info.vpcs[0].vpc_id }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      lookup: id

  - name: Delete subnet {{ subnet1_name }} and {{ subnet2_name }}
    ec2_vpc_subnet:
      state: absent
      vpc_id: "{{ __vpc_info.vpcs[0].vpc_id }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      cidr: "{{ item }}"
    with_items:
      - "{{ subnet1_cidr }}"
      - "{{ subnet2_cidr }}"

  - name: Delete internet gateway "{{ igw_name }}"
    ec2_vpc_igw:
      vpc_id: "{{ __vpc_info.vpcs[0].vpc_id }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      state: absent

  - name: Delete VPC "{{ vpc_name }}" in region {{ region }}
    ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ vpc_cidr_block }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      state: absent
